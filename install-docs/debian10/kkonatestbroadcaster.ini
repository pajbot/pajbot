[main]
; display name of the bot account
nickname = KKonaTestBot
; login name of the broadcaster
streamer = kkonatestbroadcaster
; display name of the primary admin (will be granted level 2000 initially)
admin = KKonaTestAdmin
; an additional channel the bot will join and receive commands from. (login name)
control_hub = kkonatesthub
; db connection url
; see here for available options:
; https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING
; https://docs.sqlalchemy.org/en/13/dialects/postgresql.html#module-sqlalchemy.dialects.postgresql.psycopg2
; Note on the weird urlencoding for search_path: the argument is (if written differently:)
; args = { "options": "-c search_path=pajbot1_kkonatestbroadcaster" }, which after urlencoding has `%20` instead of
; space characters. Because the config parser interprets the % character to begin a substitution
; for an environment variable, the % characters are doubled so they are interpreted
; as literal % signs.
; https://docs.python.org/3/library/configparser.html#interpolation-of-values
db = postgresql+psycopg2:///pajbot?options=-c%%20search_path%%3Dpajbot1_kkonatestbroadcaster
; timezone the bot uses internally, e.g. to show the time when somebody was last seen for example
; use the names from this list https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
timezone = Europe/Berlin
; set this to 1 if your bot is a verified bot (increased rate limits) on twitch
;verified = 1

; Set this to a valid Wolfram|Alpha App ID to enable wolfram alpha query functionality
; via !add funccommand query|wolframquery query --level 250
;wolfram = ABCDEF-GHIJKLMNOP
; this location/ip is used to localize the queries to a default location.
; https://products.wolframalpha.com/api/documentation/#semantic-location
; if you specify both IP and location, the location will be ignored.
;wolfram_ip = 62.41.0.123
;wolfram_location = Amsterdam

[web]
; enabled web modules, separated by spaces. For example you could make this
; "linefarming pleblist" to enable the pleblist module additionally.
modules = linefarming
; display name of the broadcaster
streamer_name = KKonaTestBroadcaster
; domain that the website runs on
domain = bot.kkonatestbroadcaster.tv
; this configures hearthstone decks functionality if you have the module enabled
deck_tab_images = 1

; streamelements login credentials if you are using pleblist, to get donations info
; note that streamelements login with pajbot is dead, since StreamElements removed their OAuth login endpoint.
; just leave these defaults in place
[streamelements]
client_id = abc
client_secret = def

; streamlabs login credentials if you are using pleblist, to get donations info
[streamlabs]
client_id = abc
client_secret = def

; phrases the bot prints when it starts up and exits
[phrases]
welcome = {nickname} {version} running!
quit = {nickname} {version} shutting down...
; optional: you can make the bot print multiple messages on startup/quit,
; for example a common use for this might be to turn emote only mode on when the bot is quit
; and to turn it back off once it's back. (notice the indentation)
;welcome = {nickname} {version} running!
;    .emoteonlyoff
;quit = .emoteonly
;    {nickname} {version} shutting down...

; client_id used for both the bot and the web login
[twitchapi]
client_id = 0f958ce6bf20ba8ea84a21e43ebba1
client_secret = cdaa2b0832ccd5b1f053f2faffc37f
redirect_uri = https://bot.kkonatestbroadcaster.tv/login/authorized

; you can optionally populate this with twitter access tokens
; if you want to be able to interact with twitter.
[twitter]
consumer_key = abc
consumer_secret = abc
access_token = 123-abc
access_token_secret = abc
streaming = 1

; leave these for normal bot operation
[flags]
silent = 0
; enables !eval
dev = 1

[websocket]
enabled = 1
unix_socket = /srv/pajbot/kkonatestbroadcaster-websocket.sock
host = wss://bot.kkonatestbroadcaster.tv/clrsocket

; you can optionally populate this for pleblist
[youtube]
developer_key = abc

; This socket lets the bot process and the web process communicate
; This is NOT the socket of the uwsgi process to proxy web requests to
[sock]
sock_file = /srv/pajbot/kkonatestbroadcaster-bot.sock
